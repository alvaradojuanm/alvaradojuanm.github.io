volumes:
  n8n_storage:
  postgres_storage:
  postgres_custom_data:
  ollama_storage:
  qdrant_storage:

networks:
  redn8n:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['redn8n']
  environment:
    # Configuración de Proxy Corporativo para Acceso a Internet
    - HTTP_PROXY=http://10.132.222.73:9090
    - http_proxy=http://10.132.222.73:9090
    - HTTPS_PROXY=https://10.132.222.73:9090
    - https_proxy=https://10.132.222.73:9090
    - FTP_PROXY=http://10.132.222.73:9090
    - ftp_proxy=http://10.132.222.73:9090
    - NO_PROXY=localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import
    - no_proxy=localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import

    # Base de datos N8N
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}

    # Base de datos adicional para flujos personalizados
    - CUSTOM_DB_HOST=postgres-custom
    - CUSTOM_DB_USER=${CUSTOM_POSTGRES_USER}
    - CUSTOM_DB_PASSWORD=${CUSTOM_POSTGRES_PASSWORD}
    - CUSTOM_DB_DATABASE=${CUSTOM_POSTGRES_DB}

    # Zona Horaria
    - TZ=America/Caracas

    # Configuración de N8N
    - N8N_SECURE_COOKIE=false
    - N8N_RUNNERS_ENABLED=true
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false

    # Configuración de Seguridad
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}

    # Configuración de Ollama y Qdrant
    - OLLAMA_HOST=ollama:11434
    - OLLAMA_URL=http://ollama:11434
    - QDRANT_HOST=qdrant:6333
    - QDRANT_URL=http://qdrant:6333

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['redn8n']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['redn8n']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - "sleep 3; ollama run llama3.2"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['redn8n']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  postgres-custom:
    image: postgres:16-alpine
    container_name: postgres-custom
    hostname: postgres-custom
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${CUSTOM_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CUSTOM_POSTGRES_PASSWORD}
      - POSTGRES_DB=${CUSTOM_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_custom_data:/var/lib/postgresql/data
    networks:
      - redn8n

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
      - /home/documentos:/app/mis_documentos_host
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['redn8n']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-gpu-amd:
    profiles: ["gpu-amd"]
    <<: *service-ollama
    image: ollama/ollama:rocm
    devices:
      - "/dev/kfd"
      - "/dev/dri"

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu

  ollama-pull-llama-gpu-amd:
    profiles: ["gpu-amd"]
    <<: *init-ollama
    image: ollama/ollama:rocm
    depends_on:
      - ollama-gpu-amd




docker run -it --rm --network redn8n curlimages/curl curl -v https://generativelanguage.googleapis.com

docker exec -it n8n sh
curl -v https://generativelanguage.googleapis.com


************


docker run -it --rm --network redn8n \
  -e HTTP_PROXY=http://10.132.222.73:9090 \
  -e http_proxy=http://10.132.222.73:9090 \
  -e HTTPS_PROXY=https://10.132.222.73:9090 \
  -e https_proxy=https://10.132.222.73:9090 \
  -e NO_PROXY=localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import \
  curlimages/curl curl -v https://generativelanguage.googleapis.com



***************

docker run -it --rm --network redn8n \
  -e HTTPS_PROXY=https://10.132.222.73:9090 \
  -e https_proxy=https://10.132.222.73:9090 \
  -e NO_PROXY=localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import \
  curlimages/curl curl -v https://generativelanguage.googleapis.com


****************


docker run -it --rm --network redn8n curlimages/curl curl -v https://generativelanguage.googleapis.com

****************


root@sapl8464:/home/dockeruser# docker run -it --rm --network redn8n \
  -e HTTP_PROXY=http://10.132.222.73:9090 \
  -e http_proxy=http://10.132.222.73:9090 \
  -e HTTPS_PROXY=http://10.132.222.73:9090 \
  -e https_proxy=http://10.132.222.73:9090 \
  -e NO_PROXY=localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import \
  curlimages/curl curl -v https://generativelanguage.googleapis.com
* Uses proxy env variable NO_PROXY == 'localhost,127.0.0.1,postgres,postgres-custom,qdrant,ollama,n8n,n8n-import'
* Uses proxy env variable https_proxy == 'http://10.132.222.73:9090'
*   Trying 10.132.222.73:9090...
* CONNECT tunnel: HTTP/1.1 negotiated
* allocate connect buffer
* Establish HTTP proxy tunnel to generativelanguage.googleapis.com:443
> CONNECT generativelanguage.googleapis.com:443 HTTP/1.1
> Host: generativelanguage.googleapis.com:443
> User-Agent: curl/8.14.1
> Proxy-Connection: Keep-Alive
>
< HTTP/1.0 200 Connection Established
<
* CONNECT phase completed
* CONNECT tunnel established, response 200
* ALPN: curl offers h2,http/1.1
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
*  CAfile: /cacert.pem
*  CApath: none
* TLSv1.3 (IN), TLS handshake, Server hello (2):
* TLSv1.3 (IN), TLS change cipher, Change cipher spec (1):
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
* TLSv1.3 (IN), TLS handshake, Certificate (11):
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
* TLSv1.3 (IN), TLS handshake, Finished (20):
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
* TLSv1.3 (OUT), TLS handshake, Finished (20):
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384 / X25519MLKEM768 / id-ecPublicKey
* ALPN: server accepted h2
* Server certificate:
*  subject: CN=upload.video.google.com
*  start date: Jun  2 08:36:37 2025 GMT
*  expire date: Aug 25 08:36:36 2025 GMT
*  subjectAltName: host "generativelanguage.googleapis.com" matched cert's "*.googleapis.com"
*  issuer: C=US; O=Google Trust Services; CN=WR2
*  SSL certificate verify ok.
*   Certificate level 0: Public key type EC/prime256v1 (256/128 Bits/secBits), signed using sha256WithRSAEncryption
*   Certificate level 1: Public key type RSA (2048/112 Bits/secBits), signed using sha256WithRSAEncryption
*   Certificate level 2: Public key type RSA (4096/152 Bits/secBits), signed using sha384WithRSAEncryption
* Connected to 10.132.222.73 (10.132.222.73) port 9090
* using HTTP/2
* [HTTP/2] [1] OPENED stream for https://generativelanguage.googleapis.com/
* [HTTP/2] [1] [:method: GET]
* [HTTP/2] [1] [:scheme: https]
* [HTTP/2] [1] [:authority: generativelanguage.googleapis.com]
* [HTTP/2] [1] [:path: /]
* [HTTP/2] [1] [user-agent: curl/8.14.1]
* [HTTP/2] [1] [accept: */*]
> GET / HTTP/2
> Host: generativelanguage.googleapis.com
> User-Agent: curl/8.14.1
> Accept: */*
>
* Request completely sent off
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
< HTTP/2 404
< date: Fri, 27 Jun 2025 17:32:12 GMT
< content-type: text/html; charset=UTF-8
< server: scaffolding on HTTPServer2
< content-length: 1561
< x-xss-protection: 0
< x-frame-options: SAMEORIGIN
< x-content-type-options: nosniff
< server-timing: gfet4t7; dur=32
< alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<
<!DOCTYPE html>
<html lang=en>
  <meta charset=utf-8>
  <meta name=viewport content="initial-scale=1, minimum-scale=1, width=device-width">
  <title>Error 404 (Not Found)!!1</title>
  <style>
    *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}
  </style>
  <a href=//www.google.com/><span id=logo aria-label=Google></span></a>
  <p><b>404.</b> <ins>That’s an error.</ins>
  <p>The requested URL <code>/</code> was not found on this server.  <ins>That’s all we know.</ins>
* Connection #0 to host 10.132.222.73 left intact
root@sapl8464:/home/dockeruser# ^C
root@sapl8464:/home/dockeruser#

